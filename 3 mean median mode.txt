import java.util.*;
public class MeanMedianMode {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the number of elements in the array: ");
        int n = input.nextInt();
        int[] numbers = new int[n];
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < n; i++) {
            numbers[i] = input.nextInt();
        }
        double mean = calculateMean(numbers);
        double median = calculateMedian(numbers);
        int[] mode = calculateMode(numbers);
        System.out.println("Mean: " + mean);
        System.out.println("Median: " + median);
        System.out.println("Mode(s): " + Arrays.toString(mode));
        input.close();
    }
    public static double calculateMean(int[] numbers) {
        int sum = 0;
        for (int num : numbers) {
            sum += num;
        }
        return (double) sum / numbers.length;
    }
    public static double calculateMedian(int[] numbers) {
        Arrays.sort(numbers);
        if (numbers.length % 2 == 0) {
            int mid = numbers.length / 2;
            return (double) (numbers[mid - 1] + numbers[mid]) / 2;
        } else {
            int mid = numbers.length / 2;
            return numbers[mid];
        }
    }
    public static int[] calculateMode(int[] numbers) {
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        for (int num : numbers) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }
        int maxFrequency = 0;
        for (int frequency : frequencyMap.values()) {
            if (frequency > maxFrequency) {
                maxFrequency = frequency;
            }
        }
        List<Integer> modes = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() == maxFrequency) {
                modes.add(entry.getKey());
            }
        }
        int[] modeArray = new int[modes.size()];
        for (int i = 0; i < modes.size(); i++) {
            modeArray[i] = modes.get(i);
        }
        return modeArray;
    }
}
